# =============================================================================
# Docker Compose Configuration for MCP Stack
# =============================================================================
# This file provides a streamlined MCP-focused deployment
# Use this when you want to run ONLY the MCP server and web UI
# without background cron jobs for scraping/matching

services:
  mcp-stack:
    build:
      context: .
      dockerfile: Dockerfile
    image: job-search-mcp:latest
    container_name: job-search-mcp
    hostname: job-search-mcp
    restart: unless-stopped

    # Run MCP services only (no cron)
    command: mcp

    # Environment variables
    environment:
      # MCP Server Configuration
      - MCP_SERVER_ENABLED=true
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=${MCP_SERVER_PORT:-3000}
      - MCP_LOG_LEVEL=${MCP_LOG_LEVEL:-INFO}
      - MCP_AUTH_ENABLED=${MCP_AUTH_ENABLED:-false}
      - MCP_AUTH_TOKEN=${MCP_AUTH_TOKEN}
      - MCP_ALLOW_DESTRUCTIVE_OPERATIONS=${MCP_ALLOW_DESTRUCTIVE_OPERATIONS:-true}
      - MCP_REQUIRE_CONFIRMATION=${MCP_REQUIRE_CONFIRMATION:-true}

      # MCP Web Client Configuration
      - MCP_WEB_CLIENT_ENABLED=true
      - MCP_WEB_CLIENT_PORT=${MCP_WEB_CLIENT_PORT:-5000}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}

      # MCP Integration URLs
      - MCP_SERVER_URL=http://localhost:${MCP_SERVER_PORT:-3000}

      # llama-server connection
      - LLAMA_SERVER_URL=${LLAMA_SERVER_URL:-http://host.docker.internal:8080}
      - LLAMA_MODEL_PATH=${LLAMA_MODEL_PATH}
      - LLAMA_CONTEXT_SIZE=${LLAMA_CONTEXT_SIZE:-8192}
      - LLAMA_TEMPERATURE=${LLAMA_TEMPERATURE:-0.3}
      - LLAMA_MAX_TOKENS=${LLAMA_MAX_TOKENS:-2048}

      # Disable background cron jobs
      - ENABLE_SCRAPER_CRON=false
      - ENABLE_MATCHER_CRON=false

      # Timezone
      - TZ=${TZ:-America/New_York}

    # Port mappings (use explicit ports instead of host network)
    ports:
      - "${MCP_SERVER_PORT:-3000}:${MCP_SERVER_PORT:-3000}"  # MCP Server
      - "${MCP_WEB_CLIENT_PORT:-5000}:${MCP_WEB_CLIENT_PORT:-5000}"  # Web UI

    # Volume mounts
    volumes:
      # Profile-based directory structure
      - ./profiles:/app/profiles:rw

      # MCP Web Client conversations
      - ./conversations:/app/conversations:rw

      # Global configuration
      - ./.env:/app/.env:ro
      - ./credentials:/app/credentials:rw
      - ./assets:/app/assets:ro

      # Logs
      - mcp-logs:/var/log/job-search

    # Network configuration
    networks:
      - mcp-network

    # Resource limits (adjust based on your system)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MCP_SERVER_PORT:-3000}/health", "&&", "curl", "-f", "http://localhost:${MCP_WEB_CLIENT_PORT:-5000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Named volumes for persistent data
volumes:
  mcp-logs:
    driver: local

# Network configuration
networks:
  mcp-network:
    driver: bridge
    name: job-search-mcp-network
